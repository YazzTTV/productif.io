import fetch from 'node-fetch';

const AI_URL = 'http://localhost:3001';
const USER_PHONE = '33783642205';

async function debugSpecialHabits() {
    console.log('üîç Debug des habitudes sp√©ciales');
    console.log('=' * 40);
    
    // Test simple: une habitude normale d'abord
    console.log('\n1Ô∏è‚É£ Test habitude normale:');
    await testMessage("j'ai fait l'habitude sport");
    
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // Test sp√©cial: note de journ√©e pour aujourd'hui  
    console.log('\n2Ô∏è‚É£ Test habitude sp√©ciale (aujourd\'hui):');
    await testMessage("j'ai fait l'habitude note de sa journ√©e");
    
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // R√©pondre √† la conversation sp√©ciale
    console.log('\n3Ô∏è‚É£ R√©ponse note:');
    await testMessage("9");
    
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // R√©pondre √† la conversation sp√©ciale
    console.log('\n4Ô∏è‚É£ R√©ponse r√©sum√©:');
    await testMessage("Test debug aujourd'hui");
    
    console.log('\n‚úÖ Tests termin√©s - v√©rifiez les messages et la DB');
}

async function testMessage(message) {
    try {
        const response = await fetch(`${AI_URL}/webhook`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                object: 'whatsapp_business_account',
                entry: [{
                    id: '3469681606499078',
                    changes: [{
                        value: {
                            messaging_product: 'whatsapp',
                            metadata: {
                                display_phone_number: '33783242840',
                                phone_number_id: '589370880934492'
                            },
                            messages: [{
                                from: USER_PHONE,
                                id: `test_${Date.now()}`,
                                timestamp: Math.floor(Date.now() / 1000),
                                text: {
                                    body: message
                                },
                                type: 'text'
                            }]
                        },
                        field: 'messages'
                    }]
                }]
            })
        });

        if (response.ok) {
            console.log(`‚úÖ "${message}"`);
        } else {
            console.log(`‚ùå Erreur HTTP ${response.status}`);
        }
    } catch (error) {
        console.error(`‚ùå Erreur:`, error.message);
    }
}

debugSpecialHabits(); 